{"version":3,"sources":["components/Container/Container.module.css","components/FormContacts/FormContacts.module.css","components/Container/Container.js","components/FormContacts/FormContacts.js","components/ListContacts/ListContacts.js","components/Filter/Filter.js","App.js","index.js","components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","styles","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","resetForm","Form","preventDefault","Label","type","Input","pattern","onChange","title","placeholder","autoComplete","required","Button","ListContactsItem","id","onDelete","Item","Text","Span","onClick","ListContacts","contacts","length","List","map","contact","key","Filter","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","window","setItem","stringify","uuidv4","find","toLowerCase","alert","prevContacts","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5213ebac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__1PDtW\",\"Label\":\"FormContacts_Label__13aMi\",\"Input\":\"FormContacts_Input__2v-lW\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FormContacts.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Name\n   \n        <input\n          type=\"text\"\n          className={styles.Input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Add name\"\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n      <label className={styles.Label}>\n        Number\n   \n          <input\n          type=\"tel\"\n          className={styles.Input}\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n\n          value={number}\n          onChange={handleChange}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Add phone number\"\n          autoComplete=\"on\"\n          required\n          \n        />\n      </label>\n      <button className={styles.Button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nimport styles from \"./ListContacts.module.css\";\n\nconst ListContactsItem = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={styles.Item}>\n      <p className={styles.Text}>\n        {name}: <span className={styles.Span}>{number}</span>\n      </p>\n      <button\n        className={styles.Button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n        title=\"Удалить\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst ListContacts = ({ contacts, onDelete }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.List}>\n      {contacts.map((contact) => (\n        <ListContactsItem {...contact} onDelete={onDelete} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n\nListContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ListContacts;\n","import PropTypes from \"prop-types\";\n\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.Label}>\n      Find contacts by name :\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.Input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/FormContacts\";\nimport ContactList from \"./components/ListContacts\";\nimport Filter from \"./components/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleAddContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} Такой номер уже существует.`);\n    } else if (contacts.find((contact) => contact.number === number)) {\n      alert(`${number} Такой номер уже существует.`);\n    } else {\n      setContacts((prevContacts) => [...prevContacts, contact]);\n    }\n  };\n\n  const handleDeleteContact = (contactId) => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  const changeFilter = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && <Filter value={filter} onChange={changeFilter} />}\n      {contacts.length > 0 ? (\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDelete={handleDeleteContact}\n        />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2LALo\",\"Item\":\"ListContacts_Item__1md0j\",\"Text\":\"ListContacts_Text__3EW7Y\",\"Span\":\"ListContacts_Span__1L_ta\",\"Button\":\"ListContacts_Button__g8jEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3FoRN\",\"Input\":\"Filter_Input__20k7U\"};"],"sourceRoot":""}